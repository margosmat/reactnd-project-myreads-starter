{"version":3,"sources":["BooksAPI.js","ShelfChanger.js","Book.js","Shelf.js","Library.js","SearchBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","ShelfChanger","_this","this","react_default","a","createElement","value","props","onChange","e","updateBookShelf","target","disabled","Component","Book","_this$props","updateBook","className","style","width","height","backgroundImage","imageLinks","thumbnail","src_ShelfChanger","title","authors","map","author","key","Shelf","src_Book","Library","shelves","src_Shelf","filter","Link","to","SearchBooks","state","searchResult","updateQuery","setState","length","searchForBook","BooksAPI","undefined","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","searchResultBook","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Symbol","iterator","next","done","item","err","return","_iterator","_this2","type","placeholder","event","BooksApp","_this3","Route","path","exact","render","src_Library","src_SearchBooks","React","ReactDOM","BrowserRouter","basename","process","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6918ffbe.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, { Component } from 'react'\r\n\r\nclass ShelfChanger extends Component\r\n{\r\n    render() {\r\n        return (\r\n            <select value={this.props.shelf} onChange={ (e) => this.props.updateBookShelf(e.target.value) }>\r\n                <option value=\"move\" disabled>Move to...</option>\r\n                <option value=\"currentlyReading\">Currently Reading</option>\r\n                <option value=\"wantToRead\">Want to Read</option>\r\n                <option value=\"read\">Read</option>\r\n                <option value=\"none\">None</option>\r\n            </select>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShelfChanger","import React, { Component } from 'react'\r\nimport ShelfChanger from './ShelfChanger'\r\n\r\nclass Book extends Component {\r\n    render() {\r\n        const { book, updateBook } = this.props;\r\n\r\n        return (\r\n            <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks && book.imageLinks.thumbnail})` }}></div>\r\n                <div className=\"book-shelf-changer\">\r\n                    <ShelfChanger\r\n                        shelf={book.shelf}\r\n                        updateBookShelf={ (shelf) => { updateBook(book, shelf) } }\r\n                    />\r\n                </div>\r\n                </div>\r\n                <div className=\"book-title\">{book.title}</div>\r\n                {book.authors && book.authors.map((author) => (\r\n                    <div className=\"book-authors\" key={author}>{author}</div>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Book","import React, { Component } from 'react'\r\nimport Book from './Book'\r\n\r\nclass Shelf extends Component {\r\n    render() {\r\n        const { shelf, books, updateBook } = this.props;\r\n        return (\r\n            <div>\r\n                <h2 className=\"bookshelf-title\">{shelf.title}</h2>\r\n                <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                    {books.map((book) => (\r\n                        <li key={book.id}>\r\n                            <Book \r\n                                book={book}\r\n                                updateBook={updateBook}\r\n                            />\r\n                        </li>\r\n                    ))}\r\n                </ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Shelf","import React, { Component } from 'react'\r\nimport Shelf from './Shelf'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Library extends Component {\r\n    render () {\r\n        const { books, shelves, updateBook } = this.props;\r\n        return (\r\n            <div className=\"list-books\">\r\n                <div className=\"list-books-title\">\r\n                    <h1>MyReads</h1>\r\n                </div>\r\n                <div className=\"list-books-content\">\r\n                    <div>\r\n                        {shelves.map((shelf) => (\r\n                        <div className=\"bookshelf\" key={shelf.id}>\r\n                            <Shelf \r\n                            shelf={shelf} \r\n                            books={books.filter((book) => (book.shelf === shelf.id))}\r\n                            updateBook={updateBook} />\r\n                        </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"open-search\">\r\n                    <Link to='/search'>Add a book</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Library","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Book from './Book'\r\nimport * as BooksAPI from './BooksAPI'\r\n\r\nclass SearchBooks extends Component {\r\n    state = {\r\n        query: '',\r\n        searchResult: [],\r\n    }\r\n\r\n    updateQuery = (query) => {\r\n        this.setState({ query: query })\r\n        if (!query.length) this.setState({ searchResult: [] })\r\n    }\r\n\r\n    searchForBook = (query, books) => {\r\n        BooksAPI.search(query).then((searchResult) => {\r\n            if (searchResult === undefined)\r\n            {\r\n                this.setState({ searchResult: [] });\r\n            } else {\r\n                this.setState({searchResult}, () => {\r\n                    if (!this.state.searchResult.length) return;\r\n                    for (let searchResultBook of this.state.searchResult)\r\n                    {\r\n                        for (let book of books)\r\n                        {\r\n                            if (book.id === searchResultBook.id)\r\n                            {\r\n                                searchResultBook.shelf = book.shelf;\r\n                            }\r\n                            else {\r\n                                searchResultBook.shelf = 'none';\r\n                            }\r\n                            this.setState({searchResult: searchResult.filter((item) => item.id !== searchResultBook.id).concat(searchResultBook)});\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n              <Link to='/' className='close-search'>Close</Link>\r\n              <div className=\"search-books-input-wrapper\">\r\n                {\r\n                /*\r\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n                  You can find these search terms here:\r\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n                  you don't find a specific author or title. Every search is limited by search terms.\r\n                */}\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Search by title or author\" \r\n                    value={this.state.query} \r\n                    onChange={(event) => {\r\n                        this.updateQuery(event.target.value);\r\n                        this.searchForBook(event.target.value, this.props.books);\r\n                    }} />\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n              <ol className=\"books-grid\">\r\n              {(this.state.searchResult.length > 0) && this.state.searchResult.map((book) =>(\r\n                    <li key={book.id}>\r\n                        <Book \r\n                        book={book}\r\n                        updateBook={this.props.updateBook}\r\n                        />\r\n                    </li>\r\n                ))}\r\n              </ol>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBooks","import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport Library from './Library'\r\nimport SearchBooks from './SearchBooks'\r\nimport { Route } from 'react-router-dom'\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    /**\r\n     * TODO: Instead of using this state variable to keep track of which page\r\n     * we're on, use the URL in the browser's address bar. This will ensure that\r\n     * users can use the browser's back and forward buttons to navigate between\r\n     * pages, as well as provide a good URL they can bookmark and share.\r\n     */\r\n    books: [],\r\n    shelves: [\r\n      {title: 'Currently Reading', id: 'currentlyReading'}, \r\n      {title: 'Want to Read', id: 'wantToRead'}, \r\n      {title: 'Read', id: 'read'}]\r\n  }\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then((books) => {\r\n      this.setState({ books });\r\n    })\r\n  }\r\n\r\n  updateBook = (book, shelf) => {\r\n    book.shelf = shelf;\r\n    this.setState((state) => ({\r\n      books: (state.books.filter((item) => item.id !== book.id).concat(book))\r\n    }))\r\n    BooksAPI.update(book, shelf);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Route path='/' exact render={() => (\r\n          <Library\r\n            books={this.state.books}\r\n            shelves={this.state.shelves}\r\n            updateBook={this.updateBook}\r\n          />\r\n        )} />\r\n        <Route path='/search' render={() => (\r\n          <SearchBooks\r\n            updateBook={this.updateBook}\r\n            books={this.state.books}/>\r\n        )} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}><App /></BrowserRouter>\r\n    , document.getElementById('root'))\r\n"],"sourceRoot":""}